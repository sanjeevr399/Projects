//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Train_Details
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Mini_ProjectEntities : DbContext
    {
        public Mini_ProjectEntities()
            : base("name=Mini_ProjectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Booking_status> Booking_status { get; set; }
        public virtual DbSet<Cancelled_ticket> Cancelled_ticket { get; set; }
        public virtual DbSet<Train_details> Train_details { get; set; }
        public virtual DbSet<User_LogIn> User_LogIn { get; set; }
        public virtual DbSet<Admin> Admins { get; set; }
    
        public virtual int insert_admin(Nullable<decimal> admin_id, string admin_name, string admin_password)
        {
            var admin_idParameter = admin_id.HasValue ?
                new ObjectParameter("admin_id", admin_id) :
                new ObjectParameter("admin_id", typeof(decimal));
    
            var admin_nameParameter = admin_name != null ?
                new ObjectParameter("admin_name", admin_name) :
                new ObjectParameter("admin_name", typeof(string));
    
            var admin_passwordParameter = admin_password != null ?
                new ObjectParameter("admin_password", admin_password) :
                new ObjectParameter("admin_password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_admin", admin_idParameter, admin_nameParameter, admin_passwordParameter);
        }
    
        public virtual int insert_booking_status(Nullable<int> bid, Nullable<int> tno, string @class, Nullable<System.DateTime> date_of_travel, Nullable<int> no_of_ticket, Nullable<int> total_amount)
        {
            var bidParameter = bid.HasValue ?
                new ObjectParameter("bid", bid) :
                new ObjectParameter("bid", typeof(int));
    
            var tnoParameter = tno.HasValue ?
                new ObjectParameter("tno", tno) :
                new ObjectParameter("tno", typeof(int));
    
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            var date_of_travelParameter = date_of_travel.HasValue ?
                new ObjectParameter("date_of_travel", date_of_travel) :
                new ObjectParameter("date_of_travel", typeof(System.DateTime));
    
            var no_of_ticketParameter = no_of_ticket.HasValue ?
                new ObjectParameter("no_of_ticket", no_of_ticket) :
                new ObjectParameter("no_of_ticket", typeof(int));
    
            var total_amountParameter = total_amount.HasValue ?
                new ObjectParameter("total_amount", total_amount) :
                new ObjectParameter("total_amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_booking_status", bidParameter, tnoParameter, classParameter, date_of_travelParameter, no_of_ticketParameter, total_amountParameter);
        }
    
        public virtual int insert_cancelled_ticket(Nullable<int> cid, Nullable<int> tno, Nullable<System.DateTime> date_of_travel, Nullable<int> no_of_ticket, Nullable<int> refund)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var tnoParameter = tno.HasValue ?
                new ObjectParameter("tno", tno) :
                new ObjectParameter("tno", typeof(int));
    
            var date_of_travelParameter = date_of_travel.HasValue ?
                new ObjectParameter("date_of_travel", date_of_travel) :
                new ObjectParameter("date_of_travel", typeof(System.DateTime));
    
            var no_of_ticketParameter = no_of_ticket.HasValue ?
                new ObjectParameter("no_of_ticket", no_of_ticket) :
                new ObjectParameter("no_of_ticket", typeof(int));
    
            var refundParameter = refund.HasValue ?
                new ObjectParameter("refund", refund) :
                new ObjectParameter("refund", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_cancelled_ticket", cidParameter, tnoParameter, date_of_travelParameter, no_of_ticketParameter, refundParameter);
        }
    
        public virtual int insert_train_details(Nullable<int> tno, string tclass, string tname, string tsource, string tdestination, Nullable<int> totalseat, Nullable<int> avlseat, string tstatus, Nullable<int> fare)
        {
            var tnoParameter = tno.HasValue ?
                new ObjectParameter("tno", tno) :
                new ObjectParameter("tno", typeof(int));
    
            var tclassParameter = tclass != null ?
                new ObjectParameter("tclass", tclass) :
                new ObjectParameter("tclass", typeof(string));
    
            var tnameParameter = tname != null ?
                new ObjectParameter("tname", tname) :
                new ObjectParameter("tname", typeof(string));
    
            var tsourceParameter = tsource != null ?
                new ObjectParameter("tsource", tsource) :
                new ObjectParameter("tsource", typeof(string));
    
            var tdestinationParameter = tdestination != null ?
                new ObjectParameter("tdestination", tdestination) :
                new ObjectParameter("tdestination", typeof(string));
    
            var totalseatParameter = totalseat.HasValue ?
                new ObjectParameter("totalseat", totalseat) :
                new ObjectParameter("totalseat", typeof(int));
    
            var avlseatParameter = avlseat.HasValue ?
                new ObjectParameter("avlseat", avlseat) :
                new ObjectParameter("avlseat", typeof(int));
    
            var tstatusParameter = tstatus != null ?
                new ObjectParameter("tstatus", tstatus) :
                new ObjectParameter("tstatus", typeof(string));
    
            var fareParameter = fare.HasValue ?
                new ObjectParameter("fare", fare) :
                new ObjectParameter("fare", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_train_details", tnoParameter, tclassParameter, tnameParameter, tsourceParameter, tdestinationParameter, totalseatParameter, avlseatParameter, tstatusParameter, fareParameter);
        }
    
        public virtual int insert_user_login(Nullable<decimal> user_id, string user_name, Nullable<decimal> user_age, string user_password)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(decimal));
    
            var user_nameParameter = user_name != null ?
                new ObjectParameter("user_name", user_name) :
                new ObjectParameter("user_name", typeof(string));
    
            var user_ageParameter = user_age.HasValue ?
                new ObjectParameter("user_age", user_age) :
                new ObjectParameter("user_age", typeof(decimal));
    
            var user_passwordParameter = user_password != null ?
                new ObjectParameter("user_password", user_password) :
                new ObjectParameter("user_password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_user_login", user_idParameter, user_nameParameter, user_ageParameter, user_passwordParameter);
        }
    
        public virtual int modify_train_details(Nullable<int> tno, string tclass, string tname, string tsource, string tdestination, Nullable<int> totalseat, Nullable<int> avlseat, string tstatus, Nullable<int> fare)
        {
            var tnoParameter = tno.HasValue ?
                new ObjectParameter("tno", tno) :
                new ObjectParameter("tno", typeof(int));
    
            var tclassParameter = tclass != null ?
                new ObjectParameter("tclass", tclass) :
                new ObjectParameter("tclass", typeof(string));
    
            var tnameParameter = tname != null ?
                new ObjectParameter("tname", tname) :
                new ObjectParameter("tname", typeof(string));
    
            var tsourceParameter = tsource != null ?
                new ObjectParameter("tsource", tsource) :
                new ObjectParameter("tsource", typeof(string));
    
            var tdestinationParameter = tdestination != null ?
                new ObjectParameter("tdestination", tdestination) :
                new ObjectParameter("tdestination", typeof(string));
    
            var totalseatParameter = totalseat.HasValue ?
                new ObjectParameter("totalseat", totalseat) :
                new ObjectParameter("totalseat", typeof(int));
    
            var avlseatParameter = avlseat.HasValue ?
                new ObjectParameter("avlseat", avlseat) :
                new ObjectParameter("avlseat", typeof(int));
    
            var tstatusParameter = tstatus != null ?
                new ObjectParameter("tstatus", tstatus) :
                new ObjectParameter("tstatus", typeof(string));
    
            var fareParameter = fare.HasValue ?
                new ObjectParameter("fare", fare) :
                new ObjectParameter("fare", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modify_train_details", tnoParameter, tclassParameter, tnameParameter, tsourceParameter, tdestinationParameter, totalseatParameter, avlseatParameter, tstatusParameter, fareParameter);
        }
    
        public virtual int abc(Nullable<int> nooftic, Nullable<int> trainno)
        {
            var noofticParameter = nooftic.HasValue ?
                new ObjectParameter("nooftic", nooftic) :
                new ObjectParameter("nooftic", typeof(int));
    
            var trainnoParameter = trainno.HasValue ?
                new ObjectParameter("trainno", trainno) :
                new ObjectParameter("trainno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("abc", noofticParameter, trainnoParameter);
        }
    
        public virtual int UpdateAvailableSeats(Nullable<int> trainId, Nullable<int> numberOfSeats)
        {
            var trainIdParameter = trainId.HasValue ?
                new ObjectParameter("trainId", trainId) :
                new ObjectParameter("trainId", typeof(int));
    
            var numberOfSeatsParameter = numberOfSeats.HasValue ?
                new ObjectParameter("numberOfSeats", numberOfSeats) :
                new ObjectParameter("numberOfSeats", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAvailableSeats", trainIdParameter, numberOfSeatsParameter);
        }
    
        public virtual int CancelTableAvailableSeats(Nullable<int> trainId, Nullable<int> numberOfSeats)
        {
            var trainIdParameter = trainId.HasValue ?
                new ObjectParameter("trainId", trainId) :
                new ObjectParameter("trainId", typeof(int));
    
            var numberOfSeatsParameter = numberOfSeats.HasValue ?
                new ObjectParameter("numberOfSeats", numberOfSeats) :
                new ObjectParameter("numberOfSeats", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CancelTableAvailableSeats", trainIdParameter, numberOfSeatsParameter);
        }
    
        public virtual int UpdateAvailableSeatsOnCancellation(Nullable<int> canceledSeats, Nullable<int> trainId)
        {
            var canceledSeatsParameter = canceledSeats.HasValue ?
                new ObjectParameter("canceledSeats", canceledSeats) :
                new ObjectParameter("canceledSeats", typeof(int));
    
            var trainIdParameter = trainId.HasValue ?
                new ObjectParameter("trainId", trainId) :
                new ObjectParameter("trainId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAvailableSeatsOnCancellation", canceledSeatsParameter, trainIdParameter);
        }
    }
}
